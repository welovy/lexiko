// Generated by CoffeeScript 1.6.3
(function() {
  var Database, app, db, express, http, io, path, routes, server, sqlite3, user;

  sqlite3 = require('sqlite3');

  Database = (function() {
    function Database() {}

    Database.prototype.open = function() {
      return this.db = new sqlite3.Database('wnjpn.db');
    };

    Database.prototype.getWord = function(word) {
      console.log(word);
      return this.db.each('select * from word where lemma= "' + word + '"', function(err, row) {
        console.log(row);
        return console.log(row.id + ":" + row.info);
      });
    };

    return Database;

  })();

  express = require("express");

  routes = require("./routes");

  user = require("./routes/user");

  http = require("http");

  path = require("path");

  app = express();

  app.set("port", process.env.PORT || 3000);

  app.set("views", __dirname + "/views");

  app.set("view engine", "jade");

  app.use(express.favicon());

  app.use(express.logger("dev"));

  app.use(express.bodyParser());

  app.use(express.methodOverride());

  app.use(app.router);

  app.use(express.static(path.join(__dirname, "public")));

  app.use(express.errorHandler());

  app.get("/", routes.index);

  server = http.createServer(app).listen(app.get("port"), function() {
    return console.log("express server listening on port " + app.get("port"));
  });

  db = new Database();

  db.open();

  io = (require('socket.io')).listen(server);

  io.sockets.on("connection", function(socket) {
    return socket.on('add', function(data) {
      return db.getWord(data.word);
    });
  });

}).call(this);
